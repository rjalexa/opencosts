services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    ports:
      - "44400:44400"
    env_file:
      - ../.env.prod
    environment:
      - PYTHONPATH=/app/src
      - APP_ENV=production
    volumes:
      - ../data:/app/data
      - ../frontend/public:/app/frontend/public
      - /var/log/opencosts:/app/logs
    command: uvicorn src.api:app --host 0.0.0.0 --port 44400 --workers 2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:44400/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    ports:
      - "44401:44401"
    env_file:
      - ../.env.prod
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:44401"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Caddy service removed - using system-wide Caddy instead
  # System Caddy will proxy to localhost:44400 (backend) and localhost:44401 (frontend)

  scraper:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    command: python src/main.py
    volumes:
      - ../data:/app/data
      - ../frontend/public:/app/frontend/public
      - /var/log/opencosts:/app/logs
    environment:
      - PYTHONPATH=/app/src
      - APP_ENV=production
    restart: "no"  # Run manually or via cron
    profiles:
      - scraper  # Only start when explicitly called

volumes:
  log_data:

networks:
  default:
    name: opencosts_prod